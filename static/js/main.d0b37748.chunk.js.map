{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onLoadbyScroll","window","addEventListener","scrollCatching","onDeletebyScroll","removeEventListener","scrollHeight","max","document","documentElement","body","scrollY","clientHeight","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","updateAciveItm","forEach","item","classList","remove","add","focus","arr","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItms","errorMsg","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","lenght","i","ErrorBoundary","children","App","selectedChar","decoration","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.d0b37748.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\n    _apiKey = 'apikey=6661b6a13efab60c71627e2572992f94';\n\n    _baseOffset = 210\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\n\nexport default MarvelService;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n                <g transform=\"rotate(0)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n                <g transform=\"rotate(45)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(50,80)\">\n                <g transform=\"rotate(90)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n                <g transform=\"rotate(135)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n                <g transform=\"rotate(180)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n                <g transform=\"rotate(225)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n                <g transform=\"rotate(270)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n                <g transform=\"rotate(315)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n                    </circle>\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n    return (\n        <img\n            style={{\n                display: 'block',\n                width: '250px',\n                height: '250px',\n                objectFit: 'contain',\n                margin: '0 auto',\n            }}\n            src={img}\n            alt=\"Error\"\n        />\n    )\n}\n\nexport default ErrorMessage\n","import React, { Component } from 'react';\nimport './randomChar.scss'\n\nimport MarvelService from '../../services/MarvelService'\n\nimport mjolnir from '../../resources/img/mjolnir.png'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService()\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const { char, loading, error } = this.state\n\n        const errorMessage = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error) ? <View char={char} /> : null\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!\n                        <br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">Or choose another one</p>\n                    <button\n                        className=\"button button__main\"\n                        onClick={this.updateChar}\n                    >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img\n                        src={mjolnir}\n                        alt=\"mjolnir\"\n                        className=\"randomchar__decoration\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n\n    let imgStyle = { objectFit: 'cover' }\n\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { objectFit: 'contain' }\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img\n                src={thumbnail}\n                style={imgStyle}\n                alt=\"Random character\"\n                className=\"randomchar__img\"\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description\n                        ? description\n                        : 'There is no description for this character'}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.onLoadbyScroll();\n        this.onRequest();\n\n    }\n\n    componentWillUnmount() {\n        this.onDeletebyScroll()\n    }\n\n\n    onLoadbyScroll = () => {\n        window.addEventListener('scroll', this.scrollCatching);\n    }\n\n    onDeletebyScroll = () => {\n        window.removeEventListener('scroll', this.scrollCatching);\n    }\n\n\n    scrollCatching = () => {\n        let scrollHeight = Math.max(\n            (document.documentElement.scrollHeight, document.body.scrollHeight)\n        );\n        if (Math.floor(window.scrollY + document.documentElement.clientHeight) >= scrollHeight) {\n            this.onRequest(this.state.offset);\n        }\n    }\n\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList < 9) {\n            ended = true\n        }\n\n        this.setState(({ offset, charList }) => ({\n\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref)\n    }\n\n    updateAciveItm = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItms(arr) {\n        const items = arr.map((item, id) => {\n            let imgStyle = { objectFit: 'cover' }\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { objectFit: 'contain' }\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={\n                        () => {\n                            this.props.onCharSelected(item.id);\n                            this.updateAciveItm(id)\n                        }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.updateAciveItm(id);\n                        }\n                    }}>\n                    <img src={item.thumbnail} style={imgStyle} alt=\"abyss\" />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n\n        })\n        return (\n            <ul className=\"char__grid\" >\n                {items}\n            </ul>\n        )\n    }\n\n\n\n    render() {\n        const { error, loading, charList, offset, newItemLoading, charEnded } = this.state\n\n        const items = this.renderItms(charList)\n\n        const errorMsg = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error) ? items : null\n\n        return (\n            <div className=\"char__list\" >\n                {errorMsg}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => { this.onRequest(offset) }}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton'\n\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props\n        if (!charId) {\n            return\n        }\n\n\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false,\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n\n    render() {\n        const { char, loading, error } = this.state\n\n        const skeleton = error || char || loading ? null : <Skeleton />\n        const errorMsg = error ? <ErrorMessage /> : null\n        const spinner = loading ? <Spinner /> : null\n        const content = !(loading || error || !char) ? <View char={char} /> : null\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMsg}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n\n    const { name, description, thumbnail, homepage, wiki, comics } = char\n\n    let imgStyle = { objectFit: 'cover' }\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { objectFit: 'contain' }\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} style={imgStyle} alt={name} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.lenght > 0 ? null : 'This character doesn`t have comics for now '}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n\n                    })\n                }\n\n            </ul>\n        </>\n    )\n\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import React, { Component } from 'react';\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\n\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error) {\n        this.setState({\n            error: true\n        })\n    }\n\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage />\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","\nimport React, { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './components/app/App'\nimport './style/style.scss'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <>\n        <App />\n    </>,\n)\n"],"sourceRoot":""}